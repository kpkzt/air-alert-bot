import requests
import time
import schedule

# ID –º—ñ—Å—Ç–∞ –ö–∏—ó–≤ –≤ API alerts.in.ua
REGION_ID = "8000000000"

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å—Ç–∞–Ω —Ç—Ä–∏–≤–æ–≥–∏
last_alert_status = None

# –î–∞–Ω—ñ –¥–ª—è SendPulse
BOT_ID = "6571c6acaa0e5f3a19061706"
TOKEN = "Bearer 6d56f372c6c2c27a6dfd28e05c3e6eec"  # –ù–µ –∑–∞–±—É–¥—å –≤—Å—Ç–∞–≤–∏—Ç–∏ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω —Å—é–¥–∏

def check_air_alert():
    global last_alert_status

    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ alerts.in.ua
        response = requests.get("https://api.alerts.in.ua/v1/alerts/active.json")
        data = response.json()

        # –®—É–∫–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –ø–æ –ö–∏—î–≤—É
        active_alerts = [alert for alert in data if alert["location"]["id"] == REGION_ID]
        current_status = "alert" if active_alerts else "clear"

        # –Ø–∫—â–æ —Å—Ç–∞—Ç—É—Å –∑–º—ñ–Ω–∏–≤—Å—è ‚Äî –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if current_status != last_alert_status:
            last_alert_status = current_status

            if current_status == "alert":
                message = "üö® –£–≤–∞–≥–∞! –ü–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞ —É –ö–∏—î–≤—ñ!"
            else:
                message = "‚úÖ –í—ñ–¥–±—ñ–π –ø–æ–≤—ñ—Ç—Ä—è–Ω–æ—ó —Ç—Ä–∏–≤–æ–≥–∏ —É –ö–∏—î–≤—ñ."

            send_message_to_bot(message)

    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç—Ä–∏–≤–æ–≥–∏:", e)

def send_message_to_bot(text):
    url = f"https://api.sendpulse.com/chatbots/{BOT_ID}/messages"
    headers = {
        "Authorization": TOKEN,
        "Content-Type": "application/json"
    }
    payload = {
        "message": {
            "type": "text",
            "text": text
        }
    }

    response = requests.post(url, headers=headers, json=payload)
    print("–í—ñ–¥–ø–æ–≤—ñ–¥—å SendPulse:", response.status_code, response.text)

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
schedule.every(30).seconds.do(check_air_alert)

print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–æ. –°–ª—É—Ö–∞—î–º–æ —Ç—Ä–∏–≤–æ–≥–∏ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥...")

while True:
    schedule.run_pending()
    time.sleep(1)
