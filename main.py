import os
import time
import requests
import schedule

# ID —Ä–µ–≥—ñ–æ–Ω—É –ö–∏—ó–≤
REGION_ID = "8000000000"

# –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
CLIENT_ID = os.getenv("SENDPULSE_CLIENT_ID")
CLIENT_SECRET = os.getenv("SENDPULSE_CLIENT_SECRET")
BOT_ID = os.getenv("BOT_ID")

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω –≤ –ø–∞–º'—è—Ç—ñ
access_token = None
token_expiry = 0  # –≤ —Å–µ–∫—É–Ω–¥–∞—Ö UNIX time

def get_sendpulse_token():
    global access_token, token_expiry
    print("üîê –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤–∏–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø—É SendPulse...")

    url = "https://oauth.sendpulse.com/token"
    payload = {
        "grant_type": "client_credentials",
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET
    }

    response = requests.post(url, json=payload)
    data = response.json()

    if response.status_code == 200 and "access_token" in data:
        access_token = data["access_token"]
        token_expiry = int(time.time()) + data["expires_in"]
        print("‚úÖ –¢–æ–∫–µ–Ω –æ—Ç—Ä–∏–º–∞–Ω–æ")
    else:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞:", data)
        access_token = None

def is_token_expired():
    return access_token is None or time.time() > token_expiry - 60  # –æ–Ω–æ–≤–ª—é—î–º–æ —Ç—Ä–æ—Ö–∏ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å

def check_air_alert():
    global access_token
    if is_token_expired():
        get_sendpulse_token()

    if not access_token:
        print("‚ö†Ô∏è –ù–µ–º–∞—î —Ç–æ–∫–µ–Ω–∞ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.")
        return

    try:
        response = requests.get("https://api.alerts.in.ua/v1/alerts/active.json")
        data = response.json()

        active_alerts = [alert for alert in data if alert["location"]["id"] == REGION_ID]
        current_status = "alert" if active_alerts else "clear"

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Å—Ç–∞—Ç—É—Å –≤ –∞—Ç—Ä–∏–±—É—Ç—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
        if not hasattr(check_air_alert, "last_status"):
            check_air_alert.last_status = None

        if current_status != check_air_alert.last_status:
            check_air_alert.last_status = current_status
            message = "üö® –£–≤–∞–≥–∞! –ü–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞ —É –ö–∏—î–≤—ñ!" if current_status == "alert" else "‚úÖ –í—ñ–¥–±—ñ–π –ø–æ–≤—ñ—Ç—Ä—è–Ω–æ—ó —Ç—Ä–∏–≤–æ–≥–∏ —É –ö–∏—î–≤—ñ."
            send_message_to_bot(message)

    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç—Ä–∏–≤–æ–≥–∏:", e)

def send_message_to_bot(text):
    url = f"https://api.sendpulse.com/chatbots/{BOT_ID}/messages"
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }
    payload = {
        "message": {
            "type": "text",
            "text": text
        }
    }

    response = requests.post(url, headers=headers, json=payload)
    print("üì§ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", response.status_code, response.text)

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
schedule.every(30).seconds.do(check_air_alert)

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –°–ª—É—Ö–∞—î–º–æ —Ç—Ä–∏–≤–æ–≥–∏ –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥...")

while True:
    schedule.run_pending()
    time.sleep(1)
